apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway-deployment # Name of the deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gateway-pod # The deployment will target pods with this name
  template:
    metadata:
      labels:
        app: gateway-pod # Name of the pods
      annotations:
        dapr.io/enabled: "true"
        dapr.io/app-id: "gateway"
        dapr.io/app-port: "5000"
    spec:
      containers:
        - name: gateway-container # Name we want to give the container
          image: docker.io/bram2709/teamapp:gateway # Remote Docker image
          ports:
            - containerPort: 5000 # Expose the port that the service/app runs on
          imagePullPolicy: Always
#          env:
#            - name: spring_profiles_active
#              value: production
#      imagePullSecrets: # Token secret for pulling private Docker image from GitHub
#        - name: dockerconfigjson-github-com

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: userservice-deployment # Name of the deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: userservice-pod # The deployment will target pods with this name
  template:
    metadata:
      labels:
        app: userservice-pod # Name of the pods
      annotations:
        dapr.io/enabled: "true"
        dapr.io/app-id: "user-service"
        dapr.io/app-port: "5001"
    spec:
      containers:
        - name: userservice-container # Name we want to give the container
          image: docker.io/bram2709/teamapp:user-service # Remote Docker image
          ports:
            - containerPort: 5001 # Expose the port that the service/app runs on
          imagePullPolicy: Always
#          env:
#            - name: CONNECTION_STRING
#              valueFrom:
#                secretKeyRef:
#                  name: env-vars
#                  key: CONNECTION_STRING
#            - name: DB_NAME
#              valueFrom:
#                secretKeyRef:
#                  name: env-vars
#                  key: USER_DBNAME
#      imagePullSecrets: # Token secret for pulling private Docker image from GitHub
#        - name: dockerconfigjson-github-com
---

apiVersion: v1
kind: Ingress
metadata:
  name: ms-one-ingress # Name of the service
spec:
  rules:
    - host: userservice-service.com
      http:
        paths:
          - path: /
            backend:
              serviceName: userservice-service
              servicePort: 5001


---

apiVersion: v1
kind: Service
metadata:
  name: gateway-service # Name of the service
  labels:
    app: gateway-service
spec:
  type: LoadBalancer
  selector:
    app: gateway-pod # Send traffic to pods with this label
  ports:
    - name: default
      port: 80 # Port that we want to reach the service running on the pods on
      targetPort: 5000 # Port that the running service exposes within the container

---

apiVersion: v1
kind: Service
metadata:
  name: userservice-service # Name of the service
spec:
  selector:
    app: userservice-pod # Send traffic to pods with this label
  ports:
    - name: default
      port: 5001 # Port that we want to reach the service running on the pods on
      targetPort: 5001 # Port that the running service exposes within the container
  type: ClusterIP

