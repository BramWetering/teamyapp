# Use docker compose down && docker compose up --build -d to apply written changes and debug in Docker
version: '3.7'

services:
  gateway:
    build: gateway
    hostname: gateway
    restart: always
    ports:
      - "5000:5000"
    networks:
      - local-dev
    environment:
      spring_profiles_active: dev

  gateway-dapr:
    image: "daprio/daprd:edge"
    command: [
      "./daprd",
      "-app-id", "gateway",
      "-app-port", "5000",
      "-placement-host-address", "placement:50006",
      "-components-path", "/components",
      "--enable-api-logging"
    ]
    volumes:
      - "./dapr-components/:/components"
    depends_on:
      - gateway
    network_mode: "service:gateway"

  user-service:
    build: services/user-service
    hostname: user-service
    restart: always
    ports:
      - "5001:5001"
      - "50001:50001"
    depends_on:
      - rabbitmq
      - placement
    volumes:
      - .user-volume:/user-service
    networks:
      - local-dev
    env_file:
      - .env

  message-service:
    build: services/message-service
    hostname: user-service
    restart: always
    ports:
      - "5002:5002"
      - "50002:50002"
    depends_on:
      - rabbitmq
      - placement
    volumes:
      - .message-volume:/message-service
    networks:
      - local-dev
    env_file:
      - .env

  user-service-dapr:
    image: "daprio/daprd:edge"
    command: [
        "./daprd",
        "-app-id", "user-service",
        "-app-port", "5001",
        "-placement-host-address", "placement:50006",
        "-components-path", "/components",
        "--enable-api-logging"
    ]
    volumes:
      - "./dapr-components/:/components"
    depends_on:
      - user-service
    network_mode: "service:user-service"

  message-service-dapr:
    image: "daprio/daprd:edge"
    command: [
      "./daprd",
      "-app-id", "message-service",
      "-app-port", "5002",
      "-placement-host-address", "placement:50006",
      "-components-path", "/components",
      "--enable-api-logging"
    ]
    volumes:
      - "./dapr-components/:/components"
    depends_on:
      - message-service
    network_mode: "service:message-service"

  placement:
    image: "daprio/dapr"
    command: ["./placement", "-port", "50006"]
    ports:
      - "50006:50006"
    networks:
      - local-dev

  rabbitmq:
    image: rabbitmq:3.8.27-management-alpine
    container_name: rabbitmq
    hostname: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - local-dev
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq

  mongodb:
    image: mongo
    container_name: mongodb
    ports:
      - 27017:27017
    volumes:
      - data:/data
    environment:
      - MONGO_INITDB_ROOT_USERNAME=rootuser
      - MONGO_INITDB_ROOT_PASSWORD=rootpass

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=rootuser
      - ME_CONFIG_MONGODB_ADMINPASSWORD=rootpass
      - ME_CONFIG_MONGODB_SERVER=mongodb

volumes:
  data: {}
  user-volume:

networks:
  local-dev:


